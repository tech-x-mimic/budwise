@mixin gen-flex($props...) {
  @each $key, $value in keywords($props) {
    $prop-name: map-get($flex-props-cheatsheet, $key);
    @if $prop-name {
      #{$prop-name}: $value;
    }
  }
}

@mixin make-flexs(
  $flex-class-map: $flex-class-map,
  $flex-orders: $grid-columns,
  $flex-elastics: $flex-item-elastic
) {
  @each $classname, $prop-map in $flex-class-map {
    .#{$classname} {
      @include gen-flex($prop-map...);
    }
  }

  @for $i from 0 through $flex-orders {
    .order-#{$i} {
      order: $i;
    }
  }

  @for $i from 0 through $flex-elastics {
    .shrink-#{$i} {
      flex-shrink: $i;
    }

    .grow-#{$i} {
      flex-grow: $i;
    }
  }

  @each $breakpoint in $media {
    @include responsive($breakpoint) {
      @each $classname, $prop-map in $flex-class-map {
        .#{with-affix($breakpoint, without-dot($classname))} {
          @include gen-flex($prop-map...);
        }
      }

      @for $i from 0 through $flex-orders {
        .#{with-affix($breakpoint, "order-#{$i}")} {
          order: $i;
        }
      }

      @for $i from 0 through $flex-elastics {
        .#{with-affix($breakpoint, "shrink-#{$i}")} {
          flex-shrink: $i;
        }

        .#{with-affix($breakpoint, "grow-#{$i}")} {
          flex-grow: $i;
        }
      }
    }
  }
}
