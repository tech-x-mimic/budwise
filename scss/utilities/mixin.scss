@mixin responsive($breakpoint) {
  $width: map-get($breakpoints, $breakpoint);
  @if ($width) {
    @media only screen and (min-width: $width) {
      @content;
    }
  }
}

@mixin responsive-each($classname) {
  @each $breakpoint in $media {
    @include responsive($breakpoint) {
      #{padding-breakpoint($classname, $breakpoint)} {
        @content;
      }
    }
  }
}

@mixin responsive-width($min: null, $max: null) {
  $min-type: type-of($min);
  $max-type: type-of($max);

  @if $min-type == number and $max-type == number {
    @media only screen and (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $min-type == number {
    @media only screen and (min-width: $min) {
      @content;
    }
  } @else if $max-type == number {
    @media only screen and (max-width: $max) {
      @content;
    }
  }
}

@mixin text-truncate($ellipsis: ellipsis) {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: $ellipsis;
}

// Also know as clamp
// https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-line-clamp
@mixin line-truncate($line: 1) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line;
}

@mixin img-hover-zoom-in($duration: 0.3s, $scale: 1.1) {
  transition: $duration;
  &:hover {
    transform: scale($scale);
  }
}

/** 
 .img-wrapper-1-1 {
    @include img-aspect-radio-wrapper(1, 1);
  }
  
  <div class="img-wrapper-1-1">
    <img src="url" />
  </div>
**/
@mixin img-aspect-radio-wrapper(
  $x-scale,
  $y-scale,
  $wrapper-width-pct: 100%,
  $object-fix: cover
) {
  // safari border radius bugã€‚
  backface-visibility: hidden;
  transform: translate3d(0, 0, 0);

  position: relative;
  height: 0;
  width: $wrapper-width-pct;
  padding-bottom: $wrapper-width-pct / $x-scale * $y-scale;

  & > img {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    object-fit: $object-fix;
  }
}
